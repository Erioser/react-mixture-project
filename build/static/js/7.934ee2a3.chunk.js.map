{"version":3,"sources":["store/connect.js","store/modules/lottery/actions.js","../node_modules/antd/es/divider/index.js","pages/Lottery/particles/LotteryTypes.js","pages/Lottery/LotteryHistory/particles/LotteryHistoryTable.js","pages/Lottery/LotteryHistory/index.js"],"names":["reducers","actions","lottery","getLotteryTypes","dispatch","apiGetLotteryTypes","then","data","error_code","type","payload","lotteryTypes","result","mkMapStateToProps","param","state","forEach","reducer","resolveParamType","indexOf","stateType","r","stateResult","_state","mkMapDispatchToProps","concat","bindActionCreators","Object","prototype","toString","call","slice","customConnect","reducerParam","connect","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_config_provider__WEBPACK_IMPORTED_MODULE_2__","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","apply","this","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","__rest","s","e","t","p","getOwnPropertySymbols","propertyIsEnumerable","__webpack_exports__","props","_ref","_classNames","getPrefixCls","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","className","children","dashed","restProps","orientationPrefix","classString","role","LotteryTypes","_this","_this$props","selectedTypeId","changeSelectedTypeId","defaultId","lottery_id","react_default","a","createElement","es_radio","Group","defaultValue","buttonStyle","map","item","Button","onClick","handleButtonClick","bind","lottery_name","lottery_action","renderLotteryTypes","Component","LotteryHistoryTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","columns","title","dataIndex","render","text","row","react_router_dom","lottery_no","to","dataSource","table","pagination","LotteryHistoryPage","histories","page","pageSize","total","assertThisInitialized","pageChangeAction","id","setState","_this2","_this$state","apiGetLotteryHistory","page_size","lotteryResList","totalPage","getHistories","_this$state2","particles_LotteryTypes","divider","particles_LotteryHistoryTable","showTotal","range","current","onChange"],"mappings":"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","file":"static/js/7.934ee2a3.chunk.js","sourcesContent":["import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport lotteryActions from '@/store/modules/lottery/actions'\n\nconst reducers = ['lottery']\nconst actions = {\n  'lottery': lotteryActions\n}\n\nconst customConnect = (reducerParam) => {\n  let type = resolveParamType(reducerParam)\n  if (type === 'Undefined' || type === 'Null') {\n    return connect(\n      mkMapStateToProps(),\n      mkMapDispatchToProps()\n    )\n  }\n  let param = null\n  \n  if (type === 'String') {\n    param = [ reducerParam ]\n  } else {\n    param = reducerParam\n  }\n  return connect(\n    mkMapStateToProps(param),\n    mkMapDispatchToProps(param)\n  )\n}\n\nfunction mkMapStateToProps (param) {\n  if (!param) {\n    let result = state => state\n    return result\n  } else {\n    let resultFunc = state => {\n      let result = {}\n      param.forEach(reducer => {   \n        let type = resolveParamType(reducer)\n        if (type === 'String' && reducers.indexOf(reducer) > -1) {\n          result[reducer] = state[reducer]\n        }\n        if (type === 'Object' && reducers.indexOf(reducer.reducer) > -1) {\n          let stateType = resolveParamType(reducer.state)\n          if (stateType === 'Undefined' || stateType === 'Null') {\n            result[reducer.reducer] = state[reducer.reducer]\n          }\n          if (stateType === 'String') {\n            let r = {}\n            r[reducer.state] = state[reducer.reducer][reducer.state]\n            result[reducer.reducer] = r\n          }\n          if (stateType === 'Array') {\n            let stateResult = {}\n            reducer.state.forEach(_state => {\n              stateResult[_state] = state[reducer.reducer][_state]\n            })\n            result[reducer.reducer] = stateResult\n          }  \n        }\n      })\n      return result\n    }\n    return resultFunc\n  }\n}\n\nfunction mkMapDispatchToProps (param) {\n  if (!param) {\n    let resultFunc = dispatch => {\n      let result = {}\n      reducers.forEach(reducer => {\n        result[`${reducer}_action`] = bindActionCreators(actions[reducer], dispatch)\n      })\n      return result\n    }\n    return resultFunc\n  } else {\n    let resultFunc = dispatch => {\n      let result = {}\n      param.forEach(reducer => {\n        let type = resolveParamType(reducer)\n        if (type === 'String' && actions[reducer]) {\n          result[`${reducer}_action`] = bindActionCreators(actions[reducer], dispatch)\n        }\n        if (type === 'Object' && actions[reducer.reducer]) {\n          result[`${reducer.reducer}_action`] = bindActionCreators(actions[reducer.reducer], dispatch)\n        }\n      })\n      return result\n    }\n    return resultFunc\n  }\n}\n\nfunction resolveParamType (param) {\n  return Object.prototype.toString.call(param).slice(8, -1)\n}\n\n// customConnect('lottery')(A)\n\n// customConnect('lottery')(A)\n\n// customConnect(['lottery', 'global'])(A)\n\n// customConnect([{\n//   reduer: 'lottery',\n//   state: 'types'\n// }, 'global'])(A)\n\n// customConnect([{\n//   reduer: 'lottery',\n//   state: ['types', 'detail']\n// }, 'global'])(A)\n\nexport default customConnect","\nimport {\n  apiGetLotteryTypes\n} from '@/api'\n\nexport default {\n  getLotteryTypes () {\n    return function (dispatch) {\n      apiGetLotteryTypes().then(data => {\n        if (data.error_code !== 0) return false\n        dispatch({\n          type: 'SET_LOTTERY_TYPES',\n          payload: {\n            lotteryTypes: data.result\n          }\n        })        \n      }) \n    }\n  }\n}","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var classString = classNames(className, prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), children), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _classNames));\n    return React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import React, { Component } from 'react'\n// import { connect } from 'react-redux'\n// import { bindActionCreators } from 'redux'\n// import lotteryActions from '@/store/modules/lottery/actions'\nimport connect from '@/store/connect'\nimport { Radio } from 'antd'\n\nclass LotteryTypes extends Component {\n  renderLotteryTypes () {\n    let { lottery, selectedTypeId, changeSelectedTypeId } = this.props\n    if (!lottery.lotteryTypes.length) return ''\n    let defaultId = lottery.lotteryTypes[0].lottery_id\n    if (!selectedTypeId) changeSelectedTypeId(defaultId)\n    return (\n      <Radio.Group defaultValue={selectedTypeId || defaultId} buttonStyle=\"solid\">\n        {\n          lottery.lotteryTypes.map(item => (\n            <Radio.Button onClick={this.handleButtonClick.bind(this, item)} key={item.lottery_id} value={item.lottery_id}>{item.lottery_name}</Radio.Button>\n          ))\n        }\n      </Radio.Group>\n    )\n  }\n  handleButtonClick (item) {\n    let { changeSelectedTypeId } = this.props\n    changeSelectedTypeId(item.lottery_id)\n  }\n  componentDidMount () {\n    if (!this.props.lottery.lotteryTypes.length) {\n      this.props.lottery_action.getLotteryTypes()\n    }\n  }\n  render () {\n    return (\n      <div className=\"lottery-types__container\">\n        <div className=\"lottery-types__buttons\">\n          { this.renderLotteryTypes() }\n        </div>\n      </div>\n    )\n  }\n}\n\n// const mapStateToProps = (state) => {\n//   return state.lottery\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   return bindActionCreators(lotteryActions, dispatch)\n// }\n\n// const LotteryTypesContainer = connect(mapStateToProps, mapDispatchToProps)(LotteryTypes)\n// export default LotteryTypesContainer\n\nexport default connect('lottery')(LotteryTypes)","import React, { Component } from 'react'\nimport { Table } from 'antd'\nimport { Link } from 'react-router-dom'\nclass LotteryHistoryTable extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      columns: [\n        { title: '编号', dataIndex: 'lottery_no', key: 'lottery_no' },\n        { title: '结果', dataIndex: 'lottery_res', key: 'lottery_res' },  \n        { title: '开奖日期', dataIndex: 'lottery_date', key: 'lottery_date' },\n        { title: '兑奖截止日期', dataIndex: 'lottery_exdate', key: 'lottery_exdate' },\n        { title: '本期销售额', dataIndex: 'lottery_sale_amount', key: 'lottery_sale_amount' },\n        { title: '奖池滚存', dataIndex: 'lottery_pool_amount', key: 'lottery_pool_amount' },\n        {\n          title: '操作',\n          dataIndex: '',\n          key: 'x',\n          render: (text, row) => {\n            return <Link  key={ row.lottery_no } to={`/lottery/detail/${row.lottery_id}/${row.lottery_no}`}>查看详情</Link>\n          }\n        }\n      ]\n    }\n  }\n  \n  render () {\n    let { columns } = this.state\n    let { dataSource } = this.props \n    return (\n      <div className=\"lottery-history__table\">\n        <Table pagination={false} dataSource={dataSource} columns={columns} />\n      </div>\n    )\n  }\n}\nexport default LotteryHistoryTable","import React, { Component } from 'react'\nimport './index.scss'\nimport { Divider, Pagination } from 'antd'\nimport { apiGetLotteryHistory } from '@/api'\nimport LotteryTypes from '@/pages/Lottery/particles/LotteryTypes'\nimport LotteryHistoryTable from '@/pages/Lottery/LotteryHistory/particles/LotteryHistoryTable'\n\nclass LotteryHistoryPage extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedTypeId: null,\n      histories: [],\n      page: 1,\n      pageSize: 10,\n      total: 85\n    }\n    this.changeSelectedTypeId = this.changeSelectedTypeId.bind(this)\n    this.pageChangeAction = this.pageChangeAction.bind(this)\n  }\n  \n  changeSelectedTypeId (id) {\n    this.setState({ selectedTypeId: id, page: 1 })\n  }\n  pageChangeAction (page, pageSize) {\n    this.setState({ page })\n  }\n  getHistories () {\n    let { selectedTypeId, pageSize, page } = this.state\n    apiGetLotteryHistory({\n      lottery_id: selectedTypeId,\n      page_size: pageSize,\n      page: page\n    }).then(({data}) => {\n      if (data.error_code !== 0) return false\n      this.setState({\n        histories: data.result.lotteryResList,\n        total: data.result.totalPage\n      })\n    })\n  }\n  componentDidUpdate (props, state) {\n    if (state.selectedTypeId !== this.state.selectedTypeId) {\n      this.getHistories()\n    }\n    if (state.page !== this.state.page) {\n      this.getHistories()\n    }\n  }\n  render () {\n    let  { selectedTypeId, histories, page, pageSize, total } = this.state\n    return (\n      <div className=\"page-container lottery-history-page\">\n          <LotteryTypes\n          changeSelectedTypeId = {this.changeSelectedTypeId}\n          selectedTypeId = {selectedTypeId}/>\n          <Divider/>\n          <LotteryHistoryTable dataSource = {histories}/>\n          <Divider/>\n          <Pagination\n            total={total}\n            showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`}\n            pageSize={pageSize}\n            current={page}\n            onChange={this.pageChangeAction}\n          />\n      </div>\n    )\n  }\n}\nexport default LotteryHistoryPage"],"sourceRoot":""}